// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ror.schema
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct UUID : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public UUID __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong Upper { get { return __p.bb.GetUlong(__p.bb_pos + 0); } }
  public void MutateUpper(ulong upper) { __p.bb.PutUlong(__p.bb_pos + 0, upper); }
  public ulong Lower { get { return __p.bb.GetUlong(__p.bb_pos + 8); } }
  public void MutateLower(ulong lower) { __p.bb.PutUlong(__p.bb_pos + 8, lower); }

  public static Offset<ror.schema.UUID> CreateUUID(FlatBufferBuilder builder, ulong Upper, ulong Lower) {
    builder.Prep(8, 16);
    builder.PutUlong(Lower);
    builder.PutUlong(Upper);
    return new Offset<ror.schema.UUID>(builder.Offset);
  }
  public UUIDT UnPack() {
    var _o = new UUIDT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(UUIDT _o) {
    _o.Upper = this.Upper;
    _o.Lower = this.Lower;
  }
  public static Offset<ror.schema.UUID> Pack(FlatBufferBuilder builder, UUIDT _o) {
    if (_o == null) return default(Offset<ror.schema.UUID>);
    return CreateUUID(
      builder,
      _o.Upper,
      _o.Lower);
  }
};

public class UUIDT
{
  public ulong Upper { get; set; }
  public ulong Lower { get; set; }

  public UUIDT() {
    this.Upper = 0;
    this.Lower = 0;
  }
}


}
