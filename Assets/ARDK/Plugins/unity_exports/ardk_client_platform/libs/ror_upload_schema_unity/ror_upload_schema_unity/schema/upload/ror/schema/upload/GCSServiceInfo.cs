// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ror.schema.upload
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct GCSServiceInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static GCSServiceInfo GetRootAsGCSServiceInfo(ByteBuffer _bb) { return GetRootAsGCSServiceInfo(_bb, new GCSServiceInfo()); }
  public static GCSServiceInfo GetRootAsGCSServiceInfo(ByteBuffer _bb, GCSServiceInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GCSServiceInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Object { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetObjectBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetObjectBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetObjectArray() { return __p.__vector_as_array<byte>(4); }
  public string Bucket { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBucketBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetBucketBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetBucketArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<ror.schema.upload.GCSServiceInfo> CreateGCSServiceInfo(FlatBufferBuilder builder,
      StringOffset objectOffset = default(StringOffset),
      StringOffset bucketOffset = default(StringOffset)) {
    builder.StartTable(2);
    GCSServiceInfo.AddBucket(builder, bucketOffset);
    GCSServiceInfo.AddObject(builder, objectOffset);
    return GCSServiceInfo.EndGCSServiceInfo(builder);
  }

  public static void StartGCSServiceInfo(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddObject(FlatBufferBuilder builder, StringOffset objectOffset) { builder.AddOffset(0, objectOffset.Value, 0); }
  public static void AddBucket(FlatBufferBuilder builder, StringOffset bucketOffset) { builder.AddOffset(1, bucketOffset.Value, 0); }
  public static Offset<ror.schema.upload.GCSServiceInfo> EndGCSServiceInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ror.schema.upload.GCSServiceInfo>(o);
  }
  public GCSServiceInfoT UnPack() {
    var _o = new GCSServiceInfoT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(GCSServiceInfoT _o) {
    _o.Object = this.Object;
    _o.Bucket = this.Bucket;
  }
  public static Offset<ror.schema.upload.GCSServiceInfo> Pack(FlatBufferBuilder builder, GCSServiceInfoT _o) {
    if (_o == null) return default(Offset<ror.schema.upload.GCSServiceInfo>);
    var _object = _o.Object == null ? default(StringOffset) : builder.CreateString(_o.Object);
    var _bucket = _o.Bucket == null ? default(StringOffset) : builder.CreateString(_o.Bucket);
    return CreateGCSServiceInfo(
      builder,
      _object,
      _bucket);
  }
};

public class GCSServiceInfoT
{
  public string Object { get; set; }
  public string Bucket { get; set; }

  public GCSServiceInfoT() {
    this.Object = null;
    this.Bucket = null;
  }
}


}
