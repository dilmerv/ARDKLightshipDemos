//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Grapeshot {

public class FuncRateTicket : RateTicket {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal FuncRateTicket(global::System.IntPtr cPtr, bool cMemoryOwn) : base(GrapeshotFuncRateTicketPINVOKE.FuncRateTicket_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FuncRateTicket obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FuncRateTicket() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          GrapeshotFuncRateTicketPINVOKE.delete_FuncRateTicket(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static FuncRateTicket createFuncRateTicket(FuncRateTicketCallback_FunctionApplicationBridgeBase callback) {
callback.allocApplicationCallback();
    {
      global::System.IntPtr cPtr = GrapeshotFuncRateTicketPINVOKE.FuncRateTicket_createFuncRateTicket(FuncRateTicketCallback_FunctionApplicationBridgeBase.getCPtr(callback));
      FuncRateTicket ret = (cPtr == global::System.IntPtr.Zero) ? null : new FuncRateTicket(cPtr, true);
      return ret;
    }
  }

}

}
