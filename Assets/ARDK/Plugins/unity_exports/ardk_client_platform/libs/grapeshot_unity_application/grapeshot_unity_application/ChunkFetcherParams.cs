//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Grapeshot {

public class ChunkFetcherParams : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ChunkFetcherParams(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChunkFetcherParams obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ChunkFetcherParams() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          GrapeshotSessionPINVOKE.delete_ChunkFetcherParams(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public ulong index {
    get {
      ulong ret = GrapeshotSessionPINVOKE.ChunkFetcherParams_index_get(swigCPtr);
      return ret;
    } 
  }

  public UploadChunkBody_Ret bodyReturn {
    get {
      global::System.IntPtr cPtr = GrapeshotSessionPINVOKE.ChunkFetcherParams_bodyReturn_get(swigCPtr);
      UploadChunkBody_Ret ret = (cPtr == global::System.IntPtr.Zero) ? null : new UploadChunkBody_Ret(cPtr, false);
      return ret;
    } 
  }

  public UploadAuth_Ret authReturn {
    get {
      global::System.IntPtr cPtr = GrapeshotSessionPINVOKE.ChunkFetcherParams_authReturn_get(swigCPtr);
      UploadAuth_Ret ret = (cPtr == global::System.IntPtr.Zero) ? null : new UploadAuth_Ret(cPtr, false);
      return ret;
    } 
  }

  public UploadServiceInfo_Ret serviceInfoReturn {
    set {
      GrapeshotSessionPINVOKE.ChunkFetcherParams_serviceInfoReturn_set(swigCPtr, UploadServiceInfo_Ret.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = GrapeshotSessionPINVOKE.ChunkFetcherParams_serviceInfoReturn_get(swigCPtr);
      UploadServiceInfo_Ret ret = (cPtr == global::System.IntPtr.Zero) ? null : new UploadServiceInfo_Ret(cPtr, false);
      return ret;
    } 
  }

  public ChunkFetcherParams() : this(GrapeshotSessionPINVOKE.new_ChunkFetcherParams(), true) {
  }

}

}
